---
import type { MenuItem } from "../../../types";
import { formatNumber } from "../../../utils";
interface Props {
  menuItem: MenuItem;
}

const { menuItem } = Astro.props;

const price = formatNumber(menuItem.price);
---

<div>
  <article
    class="grid grid-cols-2 place-content-center place-items-center gap-2"
  >
    <img
      src={menuItem.image}
      alt={menuItem.name}
      class="object-contain object-center w-full h-full"
    />

    <div class="justify-self-start">
      <h2 class="font-semibold text-[16px] md:text-[28px]">{menuItem.name}</h2>
      <p class="text-muted text-[12px] md:text-[16px]">
        {menuItem.description}
      </p>

      <div class="bg-category rounded-lg h-[1px] my-2 max-w-[136px]"></div>
      <p class="text-[14px] md:text-[25px] font-semibold">{price}</p>
    </div>
  </article>

  {
    menuItem.additions.length > 0 && (
      <div class="space-y-2">
        <h2 class="font-semibold text-[16px] md:text-[25px]">Дополнение</h2>
        <div class="space-y-1">
          {menuItem.additions.map((addition) => (
            <div class="flex items-center justify-between">
              <p class="text-[16px] md:text-[25px]">{addition.name}</p>

              <div class="flex items-center space-x-2">
                {addition.weight && <span>{addition.weight}</span>}
                {addition.weight && (
                  <span class="block bg-category w-2 h-2 rounded-full" />
                )}
                <p class="text-[16px] md:text-[25px]">
                  {formatNumber(addition.price)}
                </p>
              </div>
            </div>
          ))}
        </div>
      </div>
    )
  }
</div>
