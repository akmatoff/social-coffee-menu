---
import { CategoryType, type Category } from "../../types";
import DefaultCategory from "./Default/DefaultCategory.astro";
import SubCategory from "./SubCategory.astro";
import TextBased from "./TextBased/TextBased.astro";
import TwoInARow from "./TwoInARow/TwoInARow.astro";

interface Props {
  category: Category;
}

const { category } = Astro.props;

const { menu } = Astro.params;

const isBar = menu === "bar";

const hasSubCategories = category.subcategories.length > 0;
---

<section class="p-4 md:pt-10" id={`category-${category.id}`}>
  <header class="flex items-center justify-between h-12">
    <div class="h-full flex items-center space-x-4">
      <div
        class={`w-[4px] h-[24px] md:h-[48px] rounded-lg bg-category ${isBar && "bg-categorySecondary"}`}
      >
      </div>
      <h1 class="text-[20px] md:text-[45px] font-semibold">{category.name}</h1>
    </div>

    <p class="text-[9px] md:text-[14px]">{category.description}</p>
  </header>

  <div class="py-5 md:py-10 space-y-10">
    {
      hasSubCategories &&
        category.subcategories.map((sc) => <SubCategory category={sc} />)
    }

    {
      category.category_type === CategoryType.DEFAULT && (
        <DefaultCategory category={category} />
      )
    }
    {
      category.category_type === CategoryType.TWO_IN_A_ROW && (
        <TwoInARow category={category} />
      )
    }

    {
      category.category_type === CategoryType.TEXT_BASED && (
        <TextBased category={category} />
      )
    }
  </div>
</section>
